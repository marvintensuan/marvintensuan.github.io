"use strict";(self.webpackChunkmarvintensuan_github_io=self.webpackChunkmarvintensuan_github_io||[]).push([[482],{978:(e,n,t)=>{t.r(n),t.d(n,{data:()=>r});const r={key:"v-5324ec82",path:"/gists.html",title:"My GitHub Gists",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"gists.md",git:{updatedTime:1672063372e3,contributors:[]}}},237:(e,n,t)=>{t.r(n),t.d(n,{default:()=>B});var r=t(252);const i=(0,r._)("h1",{id:"my-github-gists",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#my-github-gists","aria-hidden":"true"},"#"),(0,r.Uk)(" My GitHub Gists")],-1),a=(0,r._)("p",null,"GitHub Gists are mini-repositories for snippets of code",-1),o=(0,r._)("code",null,"SAP_GUI_with_multi.py",-1),s=(0,r.Uk)(),l={href:"https://gist.github.com/marvintensuan/4b6254dbda81397752b4e07416500fee",target:"_blank",rel:"noopener noreferrer"},u=(0,r.Uk)("GIST"),h=(0,r.Uk)(" â€” uses Python's multiprocessing library to run multiple SAP scripts concurrently."),d=(0,r._)("code",null,"win32gui_iswindow.py",-1),p=(0,r.Uk)(),c={href:"https://gist.github.com/marvintensuan/6bd4c4342853a7e9ce57534fc13df4db",target:"_blank",rel:"noopener noreferrer"},m=(0,r.Uk)("GIST"),_=(0,r.Uk)(" â€” code showing how to use pywin32.win32gui to check whether or not certain Windows (i.e. message box) exists."),f=(0,r._)("code",null,"buffer.py",-1),b=(0,r.Uk)(),g={href:"https://gist.github.com/marvintensuan/11ebe670187943f277017e5a7a0e0bb4",target:"_blank",rel:"noopener noreferrer"},k=(0,r.Uk)("GIST"),U=(0,r.Uk)(" â€” Python code snippets used for my blog post "),y={href:"https://dev.to/marvintensuan/pythons-print-and-the-flush-parameter-3d7k",target:"_blank",rel:"noopener noreferrer"},v=(0,r.Uk)("Python's print and the flush parameter."),w=(0,r.Uk)("."),G=(0,r._)("code",null,"Mini-Minesweeper.MD",-1),S=(0,r.Uk)(),W={href:"https://gist.github.com/marvintensuan/7e99873e71528947f6d6c9d7dd5c456c",target:"_blank",rel:"noopener noreferrer"},M=(0,r.Uk)("GIST"),P=(0,r.Uk)(" â€” code solution for an office game."),C=(0,r._)("code",null,"Merry Chrsitmas.py",-1),I=(0,r.Uk)(),T={href:"https://gist.github.com/marvintensuan/e9a132a314148a69da63a2646fbfe7e0",target:"_blank",rel:"noopener noreferrer"},x=(0,r.Uk)("GIST"),H=(0,r.Uk)(" â€” print "),A=(0,r._)("em",null,'"Merry Christmas"',-1),D=(0,r.Uk)(" only with zeroes, ones, and function compositions."),O=(0,r._)("h1",{id:"other-code-samples",tabindex:"-1"},[(0,r._)("a",{class:"header-anchor",href:"#other-code-samples","aria-hidden":"true"},"#"),(0,r.Uk)(" Other Code Samples")],-1),j={href:"https://github.com/marvintensuan/advent2021",target:"_blank",rel:"noopener noreferrer"},z=(0,r.Uk)("advent2021"),L=(0,r.Uk)(" â€” joining Advent of Code 2021."),R={href:"https://github.com/marvintensuan/advent2022",target:"_blank",rel:"noopener noreferrer"},Y=(0,r.Uk)("advent2022"),q=(0,r.Uk)(" â€” better code, newer Python, more type hints, and more edgy. ðŸ˜„"),B={render:function(e,n){const t=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.iD)(r.HY,null,[i,a,(0,r._)("ul",null,[(0,r._)("li",null,[o,s,(0,r._)("a",l,[u,(0,r.Wm)(t)]),h]),(0,r._)("li",null,[d,p,(0,r._)("a",c,[m,(0,r.Wm)(t)]),_]),(0,r._)("li",null,[f,b,(0,r._)("a",g,[k,(0,r.Wm)(t)]),U,(0,r._)("a",y,[v,(0,r.Wm)(t)]),w]),(0,r._)("li",null,[G,S,(0,r._)("a",W,[M,(0,r.Wm)(t)]),P]),(0,r._)("li",null,[C,I,(0,r._)("a",T,[x,(0,r.Wm)(t)]),H,A,D])]),O,(0,r._)("ul",null,[(0,r._)("li",null,[(0,r._)("a",j,[z,(0,r.Wm)(t)]),L]),(0,r._)("li",null,[(0,r._)("a",R,[Y,(0,r.Wm)(t)]),q])])],64)}}}}]);